# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
references:
  container_config: &container_config
    docker:
      - image: google/cloud-sdk
    working_directory: ~/repo
    environment:
      TZ: /usr/share/zoneinfo/Asia/Tokyo

jobs:
  build:
    <<: *container_config
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Python Dependencies
          command: |
            pip install -t lib -r requirements.txt --upgrade

      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - lib

      - run:
          name: Install Node.js
          command: |
            curl -sL https://deb.nodesource.com/setup_9.x | bash -
            apt-get install -y nodejs

      - run:
          name: Install Yarn
          command: |
            npm install -g yarn

      - run:
          name: Check System information
          command: |
            echo "$(uname -a)"
            echo "Node $(node -v)"
            echo "Yarn v$(yarn --version)"
            echo "Python $(python -V)"

      - run:
          name: Install Node Dependencies
          command: |
            yarn install

      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: Bundle with Parcel
          command: |
            yarn run build:production

      - run:
          name: To Disable Debug
          command: |
            sed -i.bak -e 's/"DEBUG": True/"DEBUG": False/' main.py

      - run:
          name: Decrypt app.yaml
          command: |
            yarn run uncover -- -k $GCP_PROJECT_ID

      - run:
          name: Authenticate and Set Project ID
          command: |
            echo $GCP_SERVICE_ACCOUNT_KEY | base64 -i --decode > "$HOME/gcp-service-account-key.json"
            gcloud auth activate-service-account --key-file "$HOME/gcp-service-account-key.json"
            gcloud --quiet config set project $GCP_PROJECT_ID

      - run:
          name: Deploy to GAE
          command: |
            gcloud --quiet app deploy app.yaml --version $(echo $CIRCLE_BRANCH | sed "s/_/-/g") --verbosity=info
          no_output_timeout: 20m
